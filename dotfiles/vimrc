""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"   The .vimrc file, located in the home directory, may be thought of as a
" list of commands that run every time you start vim.  For example, the line
" 'set number' below is equivalent to running the command ':set number' every
" time you start vim.  This file is typically used to change default settings.
"   One thing to be aware of is that you may disable many of these options by
" setting a similar variable.  For example, line numbers may be disabled (for
" one session only) with ':set nonumber'.
"   This is the .vimrc file I typically use; you may find some of the commands
" useful.  Feel free to put this into your home directory in wormulon.
"
" -Joshua Pereyda
"""""""""""""""""""""""""""""""""""""""

" From https://github.com/vim/vim/issues/3608
" This is only necessary if you use "set termguicolors".
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" fixes glitch? in colors when using vim with tmux
set background=dark
set t_Co=256
set termguicolors

syntax on             " syntax highlighting
set number            " line numbers
set ruler             " Show cursor position on bottom right of screen
set background=dark   " uses colors designed for dark terminals
"set background=light " uses colors designed for light terminals

set tabstop=4         " These 3 commands make tabs 4 spaces instead of 8
set softtabstop=4     " See this website for more details on tabs in vim:
set shiftwidth=4      " http://tedlogan.com/techblog3.html
autocmd FileType ruby setlocal shiftwidth=2 tabstop=2 " only 2 spaces for ruby

set expandtab         " This option inserts spaces when you hit tab

set autoindent        " automatically inserts indentation for new lines
"set cindent           " smarter indenting for c-like languages

set backspace=2       " Allows for intuitive backspacing.  Set by default on
                      " many systems.
                      " Try ':set backspace=1'(or 0)... if you dare!
set hlsearch          " Highlight searches; use :noh to stop highlights
set mouse=a           " Enable mousewheel scroll and click navigation

"noremap <esc> :noh<return><esc>
                      " <esc> will now also run :noh, clearing search
                      " highlighting
" This line sets cindent for C or C++ file types, including *.h files
autocmd FileType c,cpp set cindent

" markdown format association.
autocmd BufNewFile,BufReadPost *.md set filetype=markdown

" Jump to the last position when opening a file a second time
if has("autocmd")
  au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" Load indentation rules by filetype
if has("autocmd")
  filetype plugin indent on
endif

let g:tex_flavor='latex' "Makes all .tex files use LaTeX syntax highlighting

" Asymptote syntax highlighting (requires ~/.vim/syntax/asy.vim)
augroup filetypedetect
    au BufNewFile,BufRead *.asy     setf asy
augroup END
filetype plugin on

" imap qq <Esc> " Map qq to Escape key in insert mode (handy for ssh on Android)

" Highlhight characters past 80 columns
"if exists('+colorcolumn')
"  set colorcolumn=80
"else
"  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
"endif

" Default colorscheme:
" molokai needs .vim/colors/molokai.vim from https://github.com/tomasr/molokai
" solarized needs .vim/colors/solarized.vim from
" https://github.com/altercation/vim-colors-solarized.git
" colorscheme solarized8_high
" colorscheme molokai

" Custom Markdown editing commands
" I've stopped using headings since I use #, ##, etc. for headings
"   'Ctrl+H 1' to insert level 1 heading equal to length of current line
" nmap <C-H>1 o=============================================================================================================================================================khjlld$
"   'Ctrl+H 2' to insert level 1 heading equal to length of current line
" nmap <C-H>2 o-------------------------------------------------------------------------------------------------------------------------------------------------------------khjlld$
"   'Ctrl+M ol' to continue a numbered list for as many lines as quantified,
"   e.g. '5 Ctrl+M ol' to continue for next 5 lines. List must be started
"   already.
nmap <C-M>ol @='^yf j^P^'<CR>
"   'Ctrl+M ul' to make lines into unordered list. Quantifier may be used.
nmap <C-M>ul @="^i - \ej^"<CR>
"   Insert mode 'Ctrl+H 1' to insert level 1 heading, etc.
" imap <C-H>1 <C-H>1a
" imap <C-H>2 <C-H>2a

" Easier split/vsplit nav https://thoughtbot.com/blog/vim-splits-move-faster-and-more-naturally
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" Folding
set nofoldenable    " folds open by default



execute pathogen#infect()

function! SourceIfExists(file)
  if filereadable(expand(a:file))
    exe 'source' a:file
  endif
endfunction

call SourceIfExists("~/.vimrc_local")
