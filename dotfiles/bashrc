uname=$(uname)
platform='unknown'
if [[ "$uname" == 'Linux' ]]; then
   platform='linux'
elif [[ "$uname" == 'Darwin' ]]; then
   platform='osx'
fi

if [[ $platform == 'osx' ]]; then
   alias ls='ls -G'
else
   alias ls='ls --color=auto'
fi

alias grep='grep --color=auto'
alias ip='ip --color'

HISTSIZE=10000
HISTFILESIZE=10000

# prompt
parse_git_branch() {
    # Return the git branch in parentheses, preceded by a space, or empty string
    # if no git branch is found.
    git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
prompt_last_exit_code() {
    # Print previous exit code followed by space, if code is non-zero
    last_exit_code=$?
    if [ $last_exit_code -eq "0" ]; then
        # printf '\001\033[34m\002%s\001\033[0m\002 ' "$last_exit_code"
        :
    else
        printf '\001\033[1;31m\002%s\001\033[0m\002 ' "$last_exit_code"
    fi

}
export PS1="\$(prompt_last_exit_code)\001\033[1;36m\002\u\001\033[0m\002\001\033[36m\002@\h\001\033[0m\002 \001\033[32m\002[\w]\001\033[0m\002\001\033[33m\002\$(parse_git_branch)\001\033[00m\002\n\001\033[1;33m\002> \001\033[0m\002"

# Bash auto-completion
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Backup bash history after each command
# From Patrick Bacon https://spin.atomicobject.com/2016/05/28/log-bash-history/
mkdir -p ~/.logs
export PROMPT_COMMAND='if [ "$(id -u)" -ne 0 ]; then echo "$(date "+%Y-%m-%d.%H:%M:%S") $(pwd) $(history 1)" >> ~/.logs/bash-history-$(date "+%Y-%m-%d").log; fi'
export HISTCONTROL=ignoreboth:erasedups  # Easier searching; true history is preserved in ~/.logs

# Write out bash history after each command -- nice for tmux
# From https://unix.stackexchange.com/a/1292/15954
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"
export SHELL_SESSION_HISTORY=0  # Needed for OS X to disable built-in fancy history behavior

# get local bashrc; used for settings I want only on one computer
if [ -f ~/.bashrc_local ]; then
    source ~/.bashrc_local
fi
